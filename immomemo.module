<?php



function immomemo_menu() {
    $items['immomemo/test'] = array(
    	'page callback' => 'test',
  		'type' => MENU_CALLBACK,
  		'access callback' => 'immomemo_user_access',
    );
    $items['immomemo/play'] = array(
    	'page callback' => 'play',
  		'type' => MENU_CALLBACK,
  		//'access callback' => 'immomemo_user_access',
  		'access callback' => true,
    );
    $items['immomemo/upload'] = array(
    	'page callback' => 'upload',
  		'type' => MENU_CALLBACK,
  		'access callback' => 'immomemo_user_access',
  		'access callback' => true,
    );
    $items['immomemo/ajax/timestamp'] = array(
    	'page callback' => 'check_timestamp',
  		'type' => MENU_CALLBACK,
  		'access callback' => 'immomemo_user_access',
    );
    
    /*$items['ajax/walletMove'] = array(
    	'page callback' => 'walletMove',
  		'type' => MENU_CALLBACK,
  		'access callback' => 'immomemo_user_access',
    );*/
    return $items;
  }


function immomemo_user_access(){
	global $user;
	//return true;

	if($user->uid !== 0)
		return true;
	return false;
}

/**

Themes
*/

function immomemo_theme($existing, $type, $theme, $path) {
	return array(
		/*'immomemo_home' => array(
			'template' => 'immomemo_templates/home',
			'arguments' => array(
				'CP' => array(),
				//'wallet' => array(),
			),
		),*/
		'immomemo_mobile' => array(
			'template' => 'immomemo_templates/play',
			'arguments' => array(
				'user_datas' => array(),
				//'wallet' => array(),
			),
		),
		'immomemo_login' => array(
			'template' => 'immomemo_templates/login',
			'arguments' => array(
				//'CP' => array(),
				//'wallet' => array(),
			),
		),
		'immomemo_upload' => array(
			'template' => 'immomemo_templates/upload',
			'arguments' => array(
				//'display' => array(),
				//'wallet' => array(),
			),
		),
	);
}

/**

Callback
*/

function test(){
	if ($test = false) {
		echo 'true';
		var_dump($test);
	}
	else{
		echo 'false';
		var_dump($test);
	}
}

function play(){
	global $user;
	//global $base_url;

	if($user->uid == 0){ // Not logged in
		//echo theme('immomemo_login');
		return theme('immomemo_login');
	}
	
	$user_datas = get_datas($user->uid);


	require_once 'PHP/Mobile_Detect.php';
	$detect = new Mobile_Detect;


	if( $detect->isMobile() || $detect->isTablet()) {
 		echo theme('immomemo_mobile', array('user_datas'=>$user_datas));
	}
	else{
		//echo theme('immomemo_home', array('CP'=>$CP));  // PC ??
		echo theme('immomemo_mobile', array('user_datas'=>$user_datas)); // mobile
	}
}

function upload(){
	global $user;

	if($user->uid != 1){ // Not admin
		return MENU_ACCESS_DENIED ;
	}
	
	if (!isset($_POST['filename'])) { // 1er appel de la fonction
		return theme('immomemo_upload');
	}

	if (empty($_POST['filename'])) {
		drupal_set_message('No filename !', 'error');
		return theme('immomemo_upload');
	}

	if (!is_numeric($_POST['user_id']) || $_POST['user_id'] == '0') {
		drupal_set_message('User uid must be an integer not null !', 'error');
		return theme('immomemo_upload');
	}

	$table_building_user = 'immo_buildings_'.$_POST['user_id'];
	$table_habitant_user = 'immo_habitants_'.$_POST['user_id'];


	$filename_path = 'sites/all/modules/immomemo/CSV_users/'.$_POST['filename'].'.csv';

	$str_id = '';
	$im_id = '';
	$street_name = '';
	$street_cp = '';
	$im_num = '0';
	$im_num2 = '';
	$result = "";
	$separator = ",";
	$poids = 0 ;
	//$row = 1;
	$genre = array(
		'0'=>'',
		'1'=>'M.& Mme',
		'2'=>'M.',
		'3'=>'Mme',
		'4'=>'Famille',
		'5'=>'Sté',
		'6'=>'SCI',
		'7'=>'Dr.',
		'8'=>'Me',
	);
	$type_voie = array(
		'0'=> '',
		'1'=>'rue',
		'2'=>'boulevard',
		'3'=>'place',
		'4'=>'impasse',
		'5'=>'quai',
	);

    if (($handle = fopen($filename_path, "r")) !== FALSE) {
        while (($data = fgetcsv($handle, 0, ";")) !== FALSE) {

        	if ($data[1] == 'Nom' || empty($data[1])) { // Ignore la 1ère ligne si nécessaire et les lignes vides qui séparent les immeubles
        		continue;
        	}

        	// On recupère le str_id ou le créé si besoin
        	$street_name_temp = $data[6];
        	$street_cp_temp = $data[7];
        	if ($street_name_temp != $street_name) {
        		$query = db_query("SELECT str_id FROM {immo_streets} WHERE str_n='".$data[6]."'");
	        	$str_id = $query->fetchField();
	        	$street_name = $street_name_temp ;
	        	if (!$str_id) {
	        		db_insert('immo_streets')
						->fields(array('str_t', 'str_n', 'str_cp'))
						->values(array('str_t'=>($voie=array_search($data[5], $type_voie))?intval($voie):0, 'str_n'=>utf8_encode($data[6]), 'str_cp'=>intval($data[7])))
						->execute();
					$str_id = Database::getConnection()->lastInsertId();
	        	}
        	}

        	// On récupère le im_id ou le créé si besoin
        	$im_num_temp = $data[3];
        	$im_num2_temp = $data[4];
        	if (($im_num != $im_num_temp) || ($im_num2 != $im_num2_temp)) { //Est-on passé à un autre immeuble ? (oui, on récupère l'im_id)
        		$query = db_query("SELECT im_id FROM {immo_buildings} WHERE str_id='".$str_id."' AND im_nbr=".utf8_encode($data[3])." AND im_nbr2='".utf8_encode($data[4])."'");
        		$im_id = $query->fetchField();
    	
        		$im_num = $im_num_temp ;	
        		$im_num2 = $im_num2_temp ;

        		if (!$im_id) { // l'immeuble n'existe pas encore, il faut le créer dans la table générale et celle du user		
					db_insert('immo_buildings')
						->fields(array('str_id', 'im_nbr', 'im_nbr2'))
						->values(array('str_id'=>$str_id, 'im_nbr'=>utf8_encode($data[3]) ,'im_nbr2'=>empty($data[4])?'':utf8_encode($data[4])))
						->execute();
					$im_id = Database::getConnection()->lastInsertId();

					db_insert($table_building_user)
						->fields(array('im_id', 'gardien', 'code', 'BAL', 'notes'))
						->values(array('im_id'=>$im_id , 'gardien'=>utf8_encode($data[10]), 'code'=>utf8_encode($data[12]) ,'BAL'=>empty($data[9])?0:intval($data[9]), 'notes'=>utf8_encode($data[13])))
						->execute();
        		}
        		$poids = 0 ; // On remet le poids des habitants à zero pour le nouvel immeuble
        	}     	
            
        	// On enregistre les habitants
        	db_insert($table_habitant_user)
        		->fields(array('im_id', 'type', 'nom', 'prenom', 'poids', 'no_pub'))
				->values(array('im_id'=>$im_id, 'type'=>intval($data[0]),'nom'=>utf8_encode($data[1]), 'prenom'=>utf8_encode($data[2]), 'poids'=>intval($poids), 'no_pub'=>0))
				->execute();

            $poids++ ;
        }
        fclose($handle);
    }
    else{
    	drupal_set_message("The file \"".$_POST['filename']."\" was not found on this server !", 'error');
		return theme('immomemo_upload');

    }
    drupal_set_message('Finished !<br>The file has been uploaded in database.');
    return theme('immomemo_upload');
}

function check_timestamp(){
	global $user;
	$user_timestamp = intval($_POST['user_timestamp']);

	$query = db_query("SELECT last_sync FROM {immo_users} WHERE user_id='".$user->uid."'");
	$server_timestamp = $query->fetchField();

	if ($user_timestamp > $server_timestamp) { // la webapp a des données plus fraiches que le serveur
		echo 'SERVER_OLD';
		return;
	}
	else if ($user_timestamp < $server_timestamp) { // Le serveur est plus frais
		echo json_encode(get_datas($user->uid));
		return;
	}
	else if ($user_timestamp == $server_timestamp) { // Données identiques
		echo 'NO_CHANGE';
	}
}



/**

Fonctions diverses
*/

function get_datas($user_id){

	$user_table_immeubles = 'immo_buildings_'.$user_id;
	$user_table_habitants = 'immo_habitants_'.$user_id;


	// Get user's streets
	$query = db_query("SELECT streets FROM {immo_users} WHERE user_id='".$user_id."'");
	$str_ids = unserialize($query->fetchField());

	foreach ($str_ids as $key => $value) {
		// Get streets data
		$query = db_query("SELECT * FROM {immo_streets} WHERE str_id='".$value."'");
		$result = $query->fetchAssoc() ;
		$user_datas['streets'][$value] = array(
			0=>$result['str_t'], 
			1=>$result['str_n'], 
			2=>$result['str_cp']
		);

		// Get immeubles data
		$query = db_query("SELECT * FROM {immo_buildings} a JOIN {$user_table_immeubles} b ON b.im_id = a.im_id WHERE a.str_id='".$value."'");
		while ($result = $query->fetchAssoc()) {
			$user_datas['immeubles'][$result['im_id']] = array(
				0=>$result['str_id'],
				1=>$result['im_nbr'],
				2=>$result['gardien'],
				3=>$result['code'],
				4=>$result['BAL'],
				5=>$result['notes']
			);
			// Get habitants data
			$query2 = db_query("SELECT * FROM {$user_table_habitants} WHERE im_id='".$result['im_id']."'");
			while ($result2 = $query2->fetchAssoc()) {
				$user_datas['habitants'][$result2['hab_id']] = array(
					0=>$result2['im_id'],
					1=>$result2['type'],
					2=>$result2['nom'],
					3=>$result2['prenom'],
					4=>$result2['poids'],
					5=>$result2['no_pub']
				);
			}
		}
	}

	// Get user's timestamp
	$query = db_query("SELECT last_sync FROM {immo_users} WHERE user_id='".$user_id."'");
	$user_datas['user_timestamp'] = $query->fetchField();

	//print_r($user_datas);
	//echo json_encode($user_datas);
	return $user_datas;
}